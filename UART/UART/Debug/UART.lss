
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000008c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000874  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000008c8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000938  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000957  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006a1  00000000  00000000  000012c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000063f  00000000  00000000  00001968  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a0  00000000  00000000  00001fa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00006d53  00000000  00000000  00002048  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000012d  00000000  00000000  00008d9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00008ec8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  000028ac  00000000  00000000  00008ef0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  78:	0c 94 38 04 	jmp	0x870	; 0x870 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <UART_Init>:
// ||Função para recepção de um frame de 5 a 8bits||
uint8_t UART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0))); //Espera o dado ser recebido
	return UDR0; //Lê o dado recebido e retorna
}
  80:	cf 93       	push	r28
  82:	df 93       	push	r29
  84:	00 d0       	rcall	.+0      	; 0x86 <UART_Init+0x6>
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	9a 83       	std	Y+2, r25	; 0x02
  8c:	89 83       	std	Y+1, r24	; 0x01
  8e:	85 ec       	ldi	r24, 0xC5	; 197
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	29 81       	ldd	r18, Y+1	; 0x01
  94:	3a 81       	ldd	r19, Y+2	; 0x02
  96:	23 2f       	mov	r18, r19
  98:	33 27       	eor	r19, r19
  9a:	fc 01       	movw	r30, r24
  9c:	20 83       	st	Z, r18
  9e:	84 ec       	ldi	r24, 0xC4	; 196
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	29 81       	ldd	r18, Y+1	; 0x01
  a4:	fc 01       	movw	r30, r24
  a6:	20 83       	st	Z, r18
  a8:	81 ec       	ldi	r24, 0xC1	; 193
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	28 e1       	ldi	r18, 0x18	; 24
  ae:	fc 01       	movw	r30, r24
  b0:	20 83       	st	Z, r18
  b2:	82 ec       	ldi	r24, 0xC2	; 194
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	2e e0       	ldi	r18, 0x0E	; 14
  b8:	fc 01       	movw	r30, r24
  ba:	20 83       	st	Z, r18
  bc:	00 00       	nop
  be:	0f 90       	pop	r0
  c0:	0f 90       	pop	r0
  c2:	df 91       	pop	r29
  c4:	cf 91       	pop	r28
  c6:	08 95       	ret

000000c8 <UART_Transmit>:
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	1f 92       	push	r1
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
  d2:	89 83       	std	Y+1, r24	; 0x01
  d4:	00 00       	nop
  d6:	80 ec       	ldi	r24, 0xC0	; 192
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	fc 01       	movw	r30, r24
  dc:	80 81       	ld	r24, Z
  de:	88 2f       	mov	r24, r24
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	80 72       	andi	r24, 0x20	; 32
  e4:	99 27       	eor	r25, r25
  e6:	89 2b       	or	r24, r25
  e8:	b1 f3       	breq	.-20     	; 0xd6 <UART_Transmit+0xe>
  ea:	86 ec       	ldi	r24, 0xC6	; 198
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	29 81       	ldd	r18, Y+1	; 0x01
  f0:	fc 01       	movw	r30, r24
  f2:	20 83       	st	Z, r18
  f4:	00 00       	nop
  f6:	0f 90       	pop	r0
  f8:	df 91       	pop	r29
  fa:	cf 91       	pop	r28
  fc:	08 95       	ret

000000fe <main>:

int main(void)
{
  fe:	0f 93       	push	r16
 100:	1f 93       	push	r17
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
 10a:	c6 54       	subi	r28, 0x46	; 70
 10c:	d1 09       	sbc	r29, r1
 10e:	0f b6       	in	r0, 0x3f	; 63
 110:	f8 94       	cli
 112:	de bf       	out	0x3e, r29	; 62
 114:	0f be       	out	0x3f, r0	; 63
 116:	cd bf       	out	0x3d, r28	; 61
	UART_Init(MYUBRR);
 118:	87 e6       	ldi	r24, 0x67	; 103
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 40 00 	call	0x80	; 0x80 <UART_Init>
	while(1)
	{
		UART_Transmit('u');
 120:	85 e7       	ldi	r24, 0x75	; 117
 122:	0e 94 64 00 	call	0xc8	; 0xc8 <UART_Transmit>
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	a8 e4       	ldi	r26, 0x48	; 72
 12c:	b3 e4       	ldi	r27, 0x43	; 67
 12e:	89 83       	std	Y+1, r24	; 0x01
 130:	9a 83       	std	Y+2, r25	; 0x02
 132:	ab 83       	std	Y+3, r26	; 0x03
 134:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	4a e7       	ldi	r20, 0x7A	; 122
 13c:	55 e4       	ldi	r21, 0x45	; 69
 13e:	69 81       	ldd	r22, Y+1	; 0x01
 140:	7a 81       	ldd	r23, Y+2	; 0x02
 142:	8b 81       	ldd	r24, Y+3	; 0x03
 144:	9c 81       	ldd	r25, Y+4	; 0x04
 146:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 14a:	dc 01       	movw	r26, r24
 14c:	cb 01       	movw	r24, r22
 14e:	9e 01       	movw	r18, r28
 150:	23 5c       	subi	r18, 0xC3	; 195
 152:	3f 4f       	sbci	r19, 0xFF	; 255
 154:	f9 01       	movw	r30, r18
 156:	80 83       	st	Z, r24
 158:	91 83       	std	Z+1, r25	; 0x01
 15a:	a2 83       	std	Z+2, r26	; 0x02
 15c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
 15e:	20 e0       	ldi	r18, 0x00	; 0
 160:	30 e0       	ldi	r19, 0x00	; 0
 162:	40 e8       	ldi	r20, 0x80	; 128
 164:	5f e3       	ldi	r21, 0x3F	; 63
 166:	ce 01       	movw	r24, r28
 168:	cd 96       	adiw	r24, 0x3d	; 61
 16a:	fc 01       	movw	r30, r24
 16c:	60 81       	ld	r22, Z
 16e:	71 81       	ldd	r23, Z+1	; 0x01
 170:	82 81       	ldd	r24, Z+2	; 0x02
 172:	93 81       	ldd	r25, Z+3	; 0x03
 174:	0e 94 1d 03 	call	0x63a	; 0x63a <__cmpsf2>
 178:	88 23       	and	r24, r24
 17a:	4c f4       	brge	.+18     	; 0x18e <main+0x90>
		__ticks = 1;
 17c:	ce 01       	movw	r24, r28
 17e:	8f 5b       	subi	r24, 0xBF	; 191
 180:	9f 4f       	sbci	r25, 0xFF	; 255
 182:	21 e0       	ldi	r18, 0x01	; 1
 184:	30 e0       	ldi	r19, 0x00	; 0
 186:	fc 01       	movw	r30, r24
 188:	31 83       	std	Z+1, r19	; 0x01
 18a:	20 83       	st	Z, r18
 18c:	67 c0       	rjmp	.+206    	; 0x25c <main+0x15e>
	else if (__tmp > 65535)
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	3f ef       	ldi	r19, 0xFF	; 255
 192:	4f e7       	ldi	r20, 0x7F	; 127
 194:	57 e4       	ldi	r21, 0x47	; 71
 196:	ce 01       	movw	r24, r28
 198:	cd 96       	adiw	r24, 0x3d	; 61
 19a:	fc 01       	movw	r30, r24
 19c:	60 81       	ld	r22, Z
 19e:	71 81       	ldd	r23, Z+1	; 0x01
 1a0:	82 81       	ldd	r24, Z+2	; 0x02
 1a2:	93 81       	ldd	r25, Z+3	; 0x03
 1a4:	0e 94 9e 03 	call	0x73c	; 0x73c <__gesf2>
 1a8:	18 16       	cp	r1, r24
 1aa:	0c f0       	brlt	.+2      	; 0x1ae <main+0xb0>
 1ac:	46 c0       	rjmp	.+140    	; 0x23a <main+0x13c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	30 e0       	ldi	r19, 0x00	; 0
 1b2:	40 e2       	ldi	r20, 0x20	; 32
 1b4:	51 e4       	ldi	r21, 0x41	; 65
 1b6:	69 81       	ldd	r22, Y+1	; 0x01
 1b8:	7a 81       	ldd	r23, Y+2	; 0x02
 1ba:	8b 81       	ldd	r24, Y+3	; 0x03
 1bc:	9c 81       	ldd	r25, Y+4	; 0x04
 1be:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 1c2:	dc 01       	movw	r26, r24
 1c4:	cb 01       	movw	r24, r22
 1c6:	8e 01       	movw	r16, r28
 1c8:	0f 5b       	subi	r16, 0xBF	; 191
 1ca:	1f 4f       	sbci	r17, 0xFF	; 255
 1cc:	bc 01       	movw	r22, r24
 1ce:	cd 01       	movw	r24, r26
 1d0:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 1d4:	dc 01       	movw	r26, r24
 1d6:	cb 01       	movw	r24, r22
 1d8:	f8 01       	movw	r30, r16
 1da:	91 83       	std	Z+1, r25	; 0x01
 1dc:	80 83       	st	Z, r24
 1de:	24 c0       	rjmp	.+72     	; 0x228 <main+0x12a>
 1e0:	ce 01       	movw	r24, r28
 1e2:	8d 5b       	subi	r24, 0xBD	; 189
 1e4:	9f 4f       	sbci	r25, 0xFF	; 255
 1e6:	20 e9       	ldi	r18, 0x90	; 144
 1e8:	31 e0       	ldi	r19, 0x01	; 1
 1ea:	fc 01       	movw	r30, r24
 1ec:	31 83       	std	Z+1, r19	; 0x01
 1ee:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1f0:	ce 01       	movw	r24, r28
 1f2:	8d 5b       	subi	r24, 0xBD	; 189
 1f4:	9f 4f       	sbci	r25, 0xFF	; 255
 1f6:	fc 01       	movw	r30, r24
 1f8:	80 81       	ld	r24, Z
 1fa:	91 81       	ldd	r25, Z+1	; 0x01
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <main+0xfe>
 200:	9e 01       	movw	r18, r28
 202:	2d 5b       	subi	r18, 0xBD	; 189
 204:	3f 4f       	sbci	r19, 0xFF	; 255
 206:	f9 01       	movw	r30, r18
 208:	91 83       	std	Z+1, r25	; 0x01
 20a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 20c:	ce 01       	movw	r24, r28
 20e:	8f 5b       	subi	r24, 0xBF	; 191
 210:	9f 4f       	sbci	r25, 0xFF	; 255
 212:	9e 01       	movw	r18, r28
 214:	2f 5b       	subi	r18, 0xBF	; 191
 216:	3f 4f       	sbci	r19, 0xFF	; 255
 218:	f9 01       	movw	r30, r18
 21a:	20 81       	ld	r18, Z
 21c:	31 81       	ldd	r19, Z+1	; 0x01
 21e:	21 50       	subi	r18, 0x01	; 1
 220:	31 09       	sbc	r19, r1
 222:	fc 01       	movw	r30, r24
 224:	31 83       	std	Z+1, r19	; 0x01
 226:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 228:	ce 01       	movw	r24, r28
 22a:	8f 5b       	subi	r24, 0xBF	; 191
 22c:	9f 4f       	sbci	r25, 0xFF	; 255
 22e:	fc 01       	movw	r30, r24
 230:	80 81       	ld	r24, Z
 232:	91 81       	ldd	r25, Z+1	; 0x01
 234:	89 2b       	or	r24, r25
 236:	a1 f6       	brne	.-88     	; 0x1e0 <main+0xe2>
 238:	2b c0       	rjmp	.+86     	; 0x290 <main+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 23a:	8e 01       	movw	r16, r28
 23c:	0f 5b       	subi	r16, 0xBF	; 191
 23e:	1f 4f       	sbci	r17, 0xFF	; 255
 240:	ce 01       	movw	r24, r28
 242:	cd 96       	adiw	r24, 0x3d	; 61
 244:	fc 01       	movw	r30, r24
 246:	60 81       	ld	r22, Z
 248:	71 81       	ldd	r23, Z+1	; 0x01
 24a:	82 81       	ldd	r24, Z+2	; 0x02
 24c:	93 81       	ldd	r25, Z+3	; 0x03
 24e:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 252:	dc 01       	movw	r26, r24
 254:	cb 01       	movw	r24, r22
 256:	f8 01       	movw	r30, r16
 258:	91 83       	std	Z+1, r25	; 0x01
 25a:	80 83       	st	Z, r24
 25c:	ce 01       	movw	r24, r28
 25e:	8b 5b       	subi	r24, 0xBB	; 187
 260:	9f 4f       	sbci	r25, 0xFF	; 255
 262:	9e 01       	movw	r18, r28
 264:	2f 5b       	subi	r18, 0xBF	; 191
 266:	3f 4f       	sbci	r19, 0xFF	; 255
 268:	f9 01       	movw	r30, r18
 26a:	20 81       	ld	r18, Z
 26c:	31 81       	ldd	r19, Z+1	; 0x01
 26e:	fc 01       	movw	r30, r24
 270:	31 83       	std	Z+1, r19	; 0x01
 272:	20 83       	st	Z, r18
 274:	ce 01       	movw	r24, r28
 276:	8b 5b       	subi	r24, 0xBB	; 187
 278:	9f 4f       	sbci	r25, 0xFF	; 255
 27a:	fc 01       	movw	r30, r24
 27c:	80 81       	ld	r24, Z
 27e:	91 81       	ldd	r25, Z+1	; 0x01
 280:	01 97       	sbiw	r24, 0x01	; 1
 282:	f1 f7       	brne	.-4      	; 0x280 <main+0x182>
 284:	9e 01       	movw	r18, r28
 286:	2b 5b       	subi	r18, 0xBB	; 187
 288:	3f 4f       	sbci	r19, 0xFF	; 255
 28a:	f9 01       	movw	r30, r18
 28c:	91 83       	std	Z+1, r25	; 0x01
 28e:	80 83       	st	Z, r24
		_delay_ms(200);
		UART_Transmit('a');
 290:	81 e6       	ldi	r24, 0x61	; 97
 292:	0e 94 64 00 	call	0xc8	; 0xc8 <UART_Transmit>
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	a8 e4       	ldi	r26, 0x48	; 72
 29c:	b3 e4       	ldi	r27, 0x43	; 67
 29e:	8d 83       	std	Y+5, r24	; 0x05
 2a0:	9e 83       	std	Y+6, r25	; 0x06
 2a2:	af 83       	std	Y+7, r26	; 0x07
 2a4:	b8 87       	std	Y+8, r27	; 0x08

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 2a6:	20 e0       	ldi	r18, 0x00	; 0
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	4a e7       	ldi	r20, 0x7A	; 122
 2ac:	55 e4       	ldi	r21, 0x45	; 69
 2ae:	6d 81       	ldd	r22, Y+5	; 0x05
 2b0:	7e 81       	ldd	r23, Y+6	; 0x06
 2b2:	8f 81       	ldd	r24, Y+7	; 0x07
 2b4:	98 85       	ldd	r25, Y+8	; 0x08
 2b6:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 2ba:	dc 01       	movw	r26, r24
 2bc:	cb 01       	movw	r24, r22
 2be:	8b ab       	std	Y+51, r24	; 0x33
 2c0:	9c ab       	std	Y+52, r25	; 0x34
 2c2:	ad ab       	std	Y+53, r26	; 0x35
 2c4:	be ab       	std	Y+54, r27	; 0x36
	if (__tmp < 1.0)
 2c6:	20 e0       	ldi	r18, 0x00	; 0
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	40 e8       	ldi	r20, 0x80	; 128
 2cc:	5f e3       	ldi	r21, 0x3F	; 63
 2ce:	6b a9       	ldd	r22, Y+51	; 0x33
 2d0:	7c a9       	ldd	r23, Y+52	; 0x34
 2d2:	8d a9       	ldd	r24, Y+53	; 0x35
 2d4:	9e a9       	ldd	r25, Y+54	; 0x36
 2d6:	0e 94 1d 03 	call	0x63a	; 0x63a <__cmpsf2>
 2da:	88 23       	and	r24, r24
 2dc:	2c f4       	brge	.+10     	; 0x2e8 <main+0x1ea>
		__ticks = 1;
 2de:	81 e0       	ldi	r24, 0x01	; 1
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	98 af       	std	Y+56, r25	; 0x38
 2e4:	8f ab       	std	Y+55, r24	; 0x37
 2e6:	3f c0       	rjmp	.+126    	; 0x366 <main+0x268>
	else if (__tmp > 65535)
 2e8:	20 e0       	ldi	r18, 0x00	; 0
 2ea:	3f ef       	ldi	r19, 0xFF	; 255
 2ec:	4f e7       	ldi	r20, 0x7F	; 127
 2ee:	57 e4       	ldi	r21, 0x47	; 71
 2f0:	6b a9       	ldd	r22, Y+51	; 0x33
 2f2:	7c a9       	ldd	r23, Y+52	; 0x34
 2f4:	8d a9       	ldd	r24, Y+53	; 0x35
 2f6:	9e a9       	ldd	r25, Y+54	; 0x36
 2f8:	0e 94 9e 03 	call	0x73c	; 0x73c <__gesf2>
 2fc:	18 16       	cp	r1, r24
 2fe:	4c f5       	brge	.+82     	; 0x352 <main+0x254>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 300:	20 e0       	ldi	r18, 0x00	; 0
 302:	30 e0       	ldi	r19, 0x00	; 0
 304:	40 e2       	ldi	r20, 0x20	; 32
 306:	51 e4       	ldi	r21, 0x41	; 65
 308:	6d 81       	ldd	r22, Y+5	; 0x05
 30a:	7e 81       	ldd	r23, Y+6	; 0x06
 30c:	8f 81       	ldd	r24, Y+7	; 0x07
 30e:	98 85       	ldd	r25, Y+8	; 0x08
 310:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 314:	dc 01       	movw	r26, r24
 316:	cb 01       	movw	r24, r22
 318:	bc 01       	movw	r22, r24
 31a:	cd 01       	movw	r24, r26
 31c:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 320:	dc 01       	movw	r26, r24
 322:	cb 01       	movw	r24, r22
 324:	98 af       	std	Y+56, r25	; 0x38
 326:	8f ab       	std	Y+55, r24	; 0x37
 328:	0f c0       	rjmp	.+30     	; 0x348 <main+0x24a>
 32a:	80 e9       	ldi	r24, 0x90	; 144
 32c:	91 e0       	ldi	r25, 0x01	; 1
 32e:	9a af       	std	Y+58, r25	; 0x3a
 330:	89 af       	std	Y+57, r24	; 0x39
 332:	89 ad       	ldd	r24, Y+57	; 0x39
 334:	9a ad       	ldd	r25, Y+58	; 0x3a
 336:	01 97       	sbiw	r24, 0x01	; 1
 338:	f1 f7       	brne	.-4      	; 0x336 <main+0x238>
 33a:	9a af       	std	Y+58, r25	; 0x3a
 33c:	89 af       	std	Y+57, r24	; 0x39
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 33e:	8f a9       	ldd	r24, Y+55	; 0x37
 340:	98 ad       	ldd	r25, Y+56	; 0x38
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	98 af       	std	Y+56, r25	; 0x38
 346:	8f ab       	std	Y+55, r24	; 0x37
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 348:	8f a9       	ldd	r24, Y+55	; 0x37
 34a:	98 ad       	ldd	r25, Y+56	; 0x38
 34c:	89 2b       	or	r24, r25
 34e:	69 f7       	brne	.-38     	; 0x32a <main+0x22c>
 350:	14 c0       	rjmp	.+40     	; 0x37a <main+0x27c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 352:	6b a9       	ldd	r22, Y+51	; 0x33
 354:	7c a9       	ldd	r23, Y+52	; 0x34
 356:	8d a9       	ldd	r24, Y+53	; 0x35
 358:	9e a9       	ldd	r25, Y+54	; 0x36
 35a:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 35e:	dc 01       	movw	r26, r24
 360:	cb 01       	movw	r24, r22
 362:	98 af       	std	Y+56, r25	; 0x38
 364:	8f ab       	std	Y+55, r24	; 0x37
 366:	8f a9       	ldd	r24, Y+55	; 0x37
 368:	98 ad       	ldd	r25, Y+56	; 0x38
 36a:	9c af       	std	Y+60, r25	; 0x3c
 36c:	8b af       	std	Y+59, r24	; 0x3b
 36e:	8b ad       	ldd	r24, Y+59	; 0x3b
 370:	9c ad       	ldd	r25, Y+60	; 0x3c
 372:	01 97       	sbiw	r24, 0x01	; 1
 374:	f1 f7       	brne	.-4      	; 0x372 <main+0x274>
 376:	9c af       	std	Y+60, r25	; 0x3c
 378:	8b af       	std	Y+59, r24	; 0x3b
		_delay_ms(200);
		UART_Transmit('r');
 37a:	82 e7       	ldi	r24, 0x72	; 114
 37c:	0e 94 64 00 	call	0xc8	; 0xc8 <UART_Transmit>
 380:	80 e0       	ldi	r24, 0x00	; 0
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	a8 e4       	ldi	r26, 0x48	; 72
 386:	b3 e4       	ldi	r27, 0x43	; 67
 388:	89 87       	std	Y+9, r24	; 0x09
 38a:	9a 87       	std	Y+10, r25	; 0x0a
 38c:	ab 87       	std	Y+11, r26	; 0x0b
 38e:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 390:	20 e0       	ldi	r18, 0x00	; 0
 392:	30 e0       	ldi	r19, 0x00	; 0
 394:	4a e7       	ldi	r20, 0x7A	; 122
 396:	55 e4       	ldi	r21, 0x45	; 69
 398:	69 85       	ldd	r22, Y+9	; 0x09
 39a:	7a 85       	ldd	r23, Y+10	; 0x0a
 39c:	8b 85       	ldd	r24, Y+11	; 0x0b
 39e:	9c 85       	ldd	r25, Y+12	; 0x0c
 3a0:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 3a4:	dc 01       	movw	r26, r24
 3a6:	cb 01       	movw	r24, r22
 3a8:	89 a7       	std	Y+41, r24	; 0x29
 3aa:	9a a7       	std	Y+42, r25	; 0x2a
 3ac:	ab a7       	std	Y+43, r26	; 0x2b
 3ae:	bc a7       	std	Y+44, r27	; 0x2c
	if (__tmp < 1.0)
 3b0:	20 e0       	ldi	r18, 0x00	; 0
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	40 e8       	ldi	r20, 0x80	; 128
 3b6:	5f e3       	ldi	r21, 0x3F	; 63
 3b8:	69 a5       	ldd	r22, Y+41	; 0x29
 3ba:	7a a5       	ldd	r23, Y+42	; 0x2a
 3bc:	8b a5       	ldd	r24, Y+43	; 0x2b
 3be:	9c a5       	ldd	r25, Y+44	; 0x2c
 3c0:	0e 94 1d 03 	call	0x63a	; 0x63a <__cmpsf2>
 3c4:	88 23       	and	r24, r24
 3c6:	2c f4       	brge	.+10     	; 0x3d2 <main+0x2d4>
		__ticks = 1;
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	9e a7       	std	Y+46, r25	; 0x2e
 3ce:	8d a7       	std	Y+45, r24	; 0x2d
 3d0:	3f c0       	rjmp	.+126    	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
	else if (__tmp > 65535)
 3d2:	20 e0       	ldi	r18, 0x00	; 0
 3d4:	3f ef       	ldi	r19, 0xFF	; 255
 3d6:	4f e7       	ldi	r20, 0x7F	; 127
 3d8:	57 e4       	ldi	r21, 0x47	; 71
 3da:	69 a5       	ldd	r22, Y+41	; 0x29
 3dc:	7a a5       	ldd	r23, Y+42	; 0x2a
 3de:	8b a5       	ldd	r24, Y+43	; 0x2b
 3e0:	9c a5       	ldd	r25, Y+44	; 0x2c
 3e2:	0e 94 9e 03 	call	0x73c	; 0x73c <__gesf2>
 3e6:	18 16       	cp	r1, r24
 3e8:	4c f5       	brge	.+82     	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 3ea:	20 e0       	ldi	r18, 0x00	; 0
 3ec:	30 e0       	ldi	r19, 0x00	; 0
 3ee:	40 e2       	ldi	r20, 0x20	; 32
 3f0:	51 e4       	ldi	r21, 0x41	; 65
 3f2:	69 85       	ldd	r22, Y+9	; 0x09
 3f4:	7a 85       	ldd	r23, Y+10	; 0x0a
 3f6:	8b 85       	ldd	r24, Y+11	; 0x0b
 3f8:	9c 85       	ldd	r25, Y+12	; 0x0c
 3fa:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 3fe:	dc 01       	movw	r26, r24
 400:	cb 01       	movw	r24, r22
 402:	bc 01       	movw	r22, r24
 404:	cd 01       	movw	r24, r26
 406:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 40a:	dc 01       	movw	r26, r24
 40c:	cb 01       	movw	r24, r22
 40e:	9e a7       	std	Y+46, r25	; 0x2e
 410:	8d a7       	std	Y+45, r24	; 0x2d
 412:	0f c0       	rjmp	.+30     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 414:	80 e9       	ldi	r24, 0x90	; 144
 416:	91 e0       	ldi	r25, 0x01	; 1
 418:	98 ab       	std	Y+48, r25	; 0x30
 41a:	8f a7       	std	Y+47, r24	; 0x2f
 41c:	8f a5       	ldd	r24, Y+47	; 0x2f
 41e:	98 a9       	ldd	r25, Y+48	; 0x30
 420:	01 97       	sbiw	r24, 0x01	; 1
 422:	f1 f7       	brne	.-4      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 424:	98 ab       	std	Y+48, r25	; 0x30
 426:	8f a7       	std	Y+47, r24	; 0x2f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 428:	8d a5       	ldd	r24, Y+45	; 0x2d
 42a:	9e a5       	ldd	r25, Y+46	; 0x2e
 42c:	01 97       	sbiw	r24, 0x01	; 1
 42e:	9e a7       	std	Y+46, r25	; 0x2e
 430:	8d a7       	std	Y+45, r24	; 0x2d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 432:	8d a5       	ldd	r24, Y+45	; 0x2d
 434:	9e a5       	ldd	r25, Y+46	; 0x2e
 436:	89 2b       	or	r24, r25
 438:	69 f7       	brne	.-38     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 43a:	14 c0       	rjmp	.+40     	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 43c:	69 a5       	ldd	r22, Y+41	; 0x29
 43e:	7a a5       	ldd	r23, Y+42	; 0x2a
 440:	8b a5       	ldd	r24, Y+43	; 0x2b
 442:	9c a5       	ldd	r25, Y+44	; 0x2c
 444:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 448:	dc 01       	movw	r26, r24
 44a:	cb 01       	movw	r24, r22
 44c:	9e a7       	std	Y+46, r25	; 0x2e
 44e:	8d a7       	std	Y+45, r24	; 0x2d
 450:	8d a5       	ldd	r24, Y+45	; 0x2d
 452:	9e a5       	ldd	r25, Y+46	; 0x2e
 454:	9a ab       	std	Y+50, r25	; 0x32
 456:	89 ab       	std	Y+49, r24	; 0x31
 458:	89 a9       	ldd	r24, Y+49	; 0x31
 45a:	9a a9       	ldd	r25, Y+50	; 0x32
 45c:	01 97       	sbiw	r24, 0x01	; 1
 45e:	f1 f7       	brne	.-4      	; 0x45c <__EEPROM_REGION_LENGTH__+0x5c>
 460:	9a ab       	std	Y+50, r25	; 0x32
 462:	89 ab       	std	Y+49, r24	; 0x31
		_delay_ms(200);
		UART_Transmit('t');
 464:	84 e7       	ldi	r24, 0x74	; 116
 466:	0e 94 64 00 	call	0xc8	; 0xc8 <UART_Transmit>
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	90 e0       	ldi	r25, 0x00	; 0
 46e:	a8 e4       	ldi	r26, 0x48	; 72
 470:	b3 e4       	ldi	r27, 0x43	; 67
 472:	8d 87       	std	Y+13, r24	; 0x0d
 474:	9e 87       	std	Y+14, r25	; 0x0e
 476:	af 87       	std	Y+15, r26	; 0x0f
 478:	b8 8b       	std	Y+16, r27	; 0x10

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 47a:	20 e0       	ldi	r18, 0x00	; 0
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	4a e7       	ldi	r20, 0x7A	; 122
 480:	55 e4       	ldi	r21, 0x45	; 69
 482:	6d 85       	ldd	r22, Y+13	; 0x0d
 484:	7e 85       	ldd	r23, Y+14	; 0x0e
 486:	8f 85       	ldd	r24, Y+15	; 0x0f
 488:	98 89       	ldd	r25, Y+16	; 0x10
 48a:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 48e:	dc 01       	movw	r26, r24
 490:	cb 01       	movw	r24, r22
 492:	8f 8f       	std	Y+31, r24	; 0x1f
 494:	98 a3       	std	Y+32, r25	; 0x20
 496:	a9 a3       	std	Y+33, r26	; 0x21
 498:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
 49a:	20 e0       	ldi	r18, 0x00	; 0
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	40 e8       	ldi	r20, 0x80	; 128
 4a0:	5f e3       	ldi	r21, 0x3F	; 63
 4a2:	6f 8d       	ldd	r22, Y+31	; 0x1f
 4a4:	78 a1       	ldd	r23, Y+32	; 0x20
 4a6:	89 a1       	ldd	r24, Y+33	; 0x21
 4a8:	9a a1       	ldd	r25, Y+34	; 0x22
 4aa:	0e 94 1d 03 	call	0x63a	; 0x63a <__cmpsf2>
 4ae:	88 23       	and	r24, r24
 4b0:	2c f4       	brge	.+10     	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
		__ticks = 1;
 4b2:	81 e0       	ldi	r24, 0x01	; 1
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	9c a3       	std	Y+36, r25	; 0x24
 4b8:	8b a3       	std	Y+35, r24	; 0x23
 4ba:	3f c0       	rjmp	.+126    	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
	else if (__tmp > 65535)
 4bc:	20 e0       	ldi	r18, 0x00	; 0
 4be:	3f ef       	ldi	r19, 0xFF	; 255
 4c0:	4f e7       	ldi	r20, 0x7F	; 127
 4c2:	57 e4       	ldi	r21, 0x47	; 71
 4c4:	6f 8d       	ldd	r22, Y+31	; 0x1f
 4c6:	78 a1       	ldd	r23, Y+32	; 0x20
 4c8:	89 a1       	ldd	r24, Y+33	; 0x21
 4ca:	9a a1       	ldd	r25, Y+34	; 0x22
 4cc:	0e 94 9e 03 	call	0x73c	; 0x73c <__gesf2>
 4d0:	18 16       	cp	r1, r24
 4d2:	4c f5       	brge	.+82     	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 4d4:	20 e0       	ldi	r18, 0x00	; 0
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	40 e2       	ldi	r20, 0x20	; 32
 4da:	51 e4       	ldi	r21, 0x41	; 65
 4dc:	6d 85       	ldd	r22, Y+13	; 0x0d
 4de:	7e 85       	ldd	r23, Y+14	; 0x0e
 4e0:	8f 85       	ldd	r24, Y+15	; 0x0f
 4e2:	98 89       	ldd	r25, Y+16	; 0x10
 4e4:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 4e8:	dc 01       	movw	r26, r24
 4ea:	cb 01       	movw	r24, r22
 4ec:	bc 01       	movw	r22, r24
 4ee:	cd 01       	movw	r24, r26
 4f0:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 4f4:	dc 01       	movw	r26, r24
 4f6:	cb 01       	movw	r24, r22
 4f8:	9c a3       	std	Y+36, r25	; 0x24
 4fa:	8b a3       	std	Y+35, r24	; 0x23
 4fc:	0f c0       	rjmp	.+30     	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
 4fe:	80 e9       	ldi	r24, 0x90	; 144
 500:	91 e0       	ldi	r25, 0x01	; 1
 502:	9e a3       	std	Y+38, r25	; 0x26
 504:	8d a3       	std	Y+37, r24	; 0x25
 506:	8d a1       	ldd	r24, Y+37	; 0x25
 508:	9e a1       	ldd	r25, Y+38	; 0x26
 50a:	01 97       	sbiw	r24, 0x01	; 1
 50c:	f1 f7       	brne	.-4      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
 50e:	9e a3       	std	Y+38, r25	; 0x26
 510:	8d a3       	std	Y+37, r24	; 0x25
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 512:	8b a1       	ldd	r24, Y+35	; 0x23
 514:	9c a1       	ldd	r25, Y+36	; 0x24
 516:	01 97       	sbiw	r24, 0x01	; 1
 518:	9c a3       	std	Y+36, r25	; 0x24
 51a:	8b a3       	std	Y+35, r24	; 0x23
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 51c:	8b a1       	ldd	r24, Y+35	; 0x23
 51e:	9c a1       	ldd	r25, Y+36	; 0x24
 520:	89 2b       	or	r24, r25
 522:	69 f7       	brne	.-38     	; 0x4fe <__EEPROM_REGION_LENGTH__+0xfe>
 524:	14 c0       	rjmp	.+40     	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 526:	6f 8d       	ldd	r22, Y+31	; 0x1f
 528:	78 a1       	ldd	r23, Y+32	; 0x20
 52a:	89 a1       	ldd	r24, Y+33	; 0x21
 52c:	9a a1       	ldd	r25, Y+34	; 0x22
 52e:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 532:	dc 01       	movw	r26, r24
 534:	cb 01       	movw	r24, r22
 536:	9c a3       	std	Y+36, r25	; 0x24
 538:	8b a3       	std	Y+35, r24	; 0x23
 53a:	8b a1       	ldd	r24, Y+35	; 0x23
 53c:	9c a1       	ldd	r25, Y+36	; 0x24
 53e:	98 a7       	std	Y+40, r25	; 0x28
 540:	8f a3       	std	Y+39, r24	; 0x27
 542:	8f a1       	ldd	r24, Y+39	; 0x27
 544:	98 a5       	ldd	r25, Y+40	; 0x28
 546:	01 97       	sbiw	r24, 0x01	; 1
 548:	f1 f7       	brne	.-4      	; 0x546 <__EEPROM_REGION_LENGTH__+0x146>
 54a:	98 a7       	std	Y+40, r25	; 0x28
 54c:	8f a3       	std	Y+39, r24	; 0x27
		_delay_ms(200);
		UART_Transmit('\n');
 54e:	8a e0       	ldi	r24, 0x0A	; 10
 550:	0e 94 64 00 	call	0xc8	; 0xc8 <UART_Transmit>
 554:	80 e0       	ldi	r24, 0x00	; 0
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	a8 e4       	ldi	r26, 0x48	; 72
 55a:	b3 e4       	ldi	r27, 0x43	; 67
 55c:	89 8b       	std	Y+17, r24	; 0x11
 55e:	9a 8b       	std	Y+18, r25	; 0x12
 560:	ab 8b       	std	Y+19, r26	; 0x13
 562:	bc 8b       	std	Y+20, r27	; 0x14

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 564:	20 e0       	ldi	r18, 0x00	; 0
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	4a e7       	ldi	r20, 0x7A	; 122
 56a:	55 e4       	ldi	r21, 0x45	; 69
 56c:	69 89       	ldd	r22, Y+17	; 0x11
 56e:	7a 89       	ldd	r23, Y+18	; 0x12
 570:	8b 89       	ldd	r24, Y+19	; 0x13
 572:	9c 89       	ldd	r25, Y+20	; 0x14
 574:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 578:	dc 01       	movw	r26, r24
 57a:	cb 01       	movw	r24, r22
 57c:	8d 8b       	std	Y+21, r24	; 0x15
 57e:	9e 8b       	std	Y+22, r25	; 0x16
 580:	af 8b       	std	Y+23, r26	; 0x17
 582:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
 584:	20 e0       	ldi	r18, 0x00	; 0
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	40 e8       	ldi	r20, 0x80	; 128
 58a:	5f e3       	ldi	r21, 0x3F	; 63
 58c:	6d 89       	ldd	r22, Y+21	; 0x15
 58e:	7e 89       	ldd	r23, Y+22	; 0x16
 590:	8f 89       	ldd	r24, Y+23	; 0x17
 592:	98 8d       	ldd	r25, Y+24	; 0x18
 594:	0e 94 1d 03 	call	0x63a	; 0x63a <__cmpsf2>
 598:	88 23       	and	r24, r24
 59a:	2c f4       	brge	.+10     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
		__ticks = 1;
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	90 e0       	ldi	r25, 0x00	; 0
 5a0:	9a 8f       	std	Y+26, r25	; 0x1a
 5a2:	89 8f       	std	Y+25, r24	; 0x19
 5a4:	3f c0       	rjmp	.+126    	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
	else if (__tmp > 65535)
 5a6:	20 e0       	ldi	r18, 0x00	; 0
 5a8:	3f ef       	ldi	r19, 0xFF	; 255
 5aa:	4f e7       	ldi	r20, 0x7F	; 127
 5ac:	57 e4       	ldi	r21, 0x47	; 71
 5ae:	6d 89       	ldd	r22, Y+21	; 0x15
 5b0:	7e 89       	ldd	r23, Y+22	; 0x16
 5b2:	8f 89       	ldd	r24, Y+23	; 0x17
 5b4:	98 8d       	ldd	r25, Y+24	; 0x18
 5b6:	0e 94 9e 03 	call	0x73c	; 0x73c <__gesf2>
 5ba:	18 16       	cp	r1, r24
 5bc:	4c f5       	brge	.+82     	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 5be:	20 e0       	ldi	r18, 0x00	; 0
 5c0:	30 e0       	ldi	r19, 0x00	; 0
 5c2:	40 e2       	ldi	r20, 0x20	; 32
 5c4:	51 e4       	ldi	r21, 0x41	; 65
 5c6:	69 89       	ldd	r22, Y+17	; 0x11
 5c8:	7a 89       	ldd	r23, Y+18	; 0x12
 5ca:	8b 89       	ldd	r24, Y+19	; 0x13
 5cc:	9c 89       	ldd	r25, Y+20	; 0x14
 5ce:	0e 94 a3 03 	call	0x746	; 0x746 <__mulsf3>
 5d2:	dc 01       	movw	r26, r24
 5d4:	cb 01       	movw	r24, r22
 5d6:	bc 01       	movw	r22, r24
 5d8:	cd 01       	movw	r24, r26
 5da:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 5de:	dc 01       	movw	r26, r24
 5e0:	cb 01       	movw	r24, r22
 5e2:	9a 8f       	std	Y+26, r25	; 0x1a
 5e4:	89 8f       	std	Y+25, r24	; 0x19
 5e6:	0f c0       	rjmp	.+30     	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 5e8:	80 e9       	ldi	r24, 0x90	; 144
 5ea:	91 e0       	ldi	r25, 0x01	; 1
 5ec:	9c 8f       	std	Y+28, r25	; 0x1c
 5ee:	8b 8f       	std	Y+27, r24	; 0x1b
 5f0:	8b 8d       	ldd	r24, Y+27	; 0x1b
 5f2:	9c 8d       	ldd	r25, Y+28	; 0x1c
 5f4:	01 97       	sbiw	r24, 0x01	; 1
 5f6:	f1 f7       	brne	.-4      	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
 5f8:	9c 8f       	std	Y+28, r25	; 0x1c
 5fa:	8b 8f       	std	Y+27, r24	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 5fc:	89 8d       	ldd	r24, Y+25	; 0x19
 5fe:	9a 8d       	ldd	r25, Y+26	; 0x1a
 600:	01 97       	sbiw	r24, 0x01	; 1
 602:	9a 8f       	std	Y+26, r25	; 0x1a
 604:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 606:	89 8d       	ldd	r24, Y+25	; 0x19
 608:	9a 8d       	ldd	r25, Y+26	; 0x1a
 60a:	89 2b       	or	r24, r25
 60c:	69 f7       	brne	.-38     	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 60e:	14 c0       	rjmp	.+40     	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 610:	6d 89       	ldd	r22, Y+21	; 0x15
 612:	7e 89       	ldd	r23, Y+22	; 0x16
 614:	8f 89       	ldd	r24, Y+23	; 0x17
 616:	98 8d       	ldd	r25, Y+24	; 0x18
 618:	0e 94 22 03 	call	0x644	; 0x644 <__fixunssfsi>
 61c:	dc 01       	movw	r26, r24
 61e:	cb 01       	movw	r24, r22
 620:	9a 8f       	std	Y+26, r25	; 0x1a
 622:	89 8f       	std	Y+25, r24	; 0x19
 624:	89 8d       	ldd	r24, Y+25	; 0x19
 626:	9a 8d       	ldd	r25, Y+26	; 0x1a
 628:	9e 8f       	std	Y+30, r25	; 0x1e
 62a:	8d 8f       	std	Y+29, r24	; 0x1d
 62c:	8d 8d       	ldd	r24, Y+29	; 0x1d
 62e:	9e 8d       	ldd	r25, Y+30	; 0x1e
 630:	01 97       	sbiw	r24, 0x01	; 1
 632:	f1 f7       	brne	.-4      	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
 634:	9e 8f       	std	Y+30, r25	; 0x1e
 636:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(200);
		/*UART_Transmit(UART_Receive());
		_delay_ms(200);*/
	}
 638:	73 cd       	rjmp	.-1306   	; 0x120 <main+0x22>

0000063a <__cmpsf2>:
 63a:	0e 94 51 03 	call	0x6a2	; 0x6a2 <__fp_cmp>
 63e:	08 f4       	brcc	.+2      	; 0x642 <__cmpsf2+0x8>
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	08 95       	ret

00000644 <__fixunssfsi>:
 644:	0e 94 7d 03 	call	0x6fa	; 0x6fa <__fp_splitA>
 648:	88 f0       	brcs	.+34     	; 0x66c <__fixunssfsi+0x28>
 64a:	9f 57       	subi	r25, 0x7F	; 127
 64c:	98 f0       	brcs	.+38     	; 0x674 <__fixunssfsi+0x30>
 64e:	b9 2f       	mov	r27, r25
 650:	99 27       	eor	r25, r25
 652:	b7 51       	subi	r27, 0x17	; 23
 654:	b0 f0       	brcs	.+44     	; 0x682 <__fixunssfsi+0x3e>
 656:	e1 f0       	breq	.+56     	; 0x690 <__fixunssfsi+0x4c>
 658:	66 0f       	add	r22, r22
 65a:	77 1f       	adc	r23, r23
 65c:	88 1f       	adc	r24, r24
 65e:	99 1f       	adc	r25, r25
 660:	1a f0       	brmi	.+6      	; 0x668 <__fixunssfsi+0x24>
 662:	ba 95       	dec	r27
 664:	c9 f7       	brne	.-14     	; 0x658 <__fixunssfsi+0x14>
 666:	14 c0       	rjmp	.+40     	; 0x690 <__fixunssfsi+0x4c>
 668:	b1 30       	cpi	r27, 0x01	; 1
 66a:	91 f0       	breq	.+36     	; 0x690 <__fixunssfsi+0x4c>
 66c:	0e 94 97 03 	call	0x72e	; 0x72e <__fp_zero>
 670:	b1 e0       	ldi	r27, 0x01	; 1
 672:	08 95       	ret
 674:	0c 94 97 03 	jmp	0x72e	; 0x72e <__fp_zero>
 678:	67 2f       	mov	r22, r23
 67a:	78 2f       	mov	r23, r24
 67c:	88 27       	eor	r24, r24
 67e:	b8 5f       	subi	r27, 0xF8	; 248
 680:	39 f0       	breq	.+14     	; 0x690 <__fixunssfsi+0x4c>
 682:	b9 3f       	cpi	r27, 0xF9	; 249
 684:	cc f3       	brlt	.-14     	; 0x678 <__fixunssfsi+0x34>
 686:	86 95       	lsr	r24
 688:	77 95       	ror	r23
 68a:	67 95       	ror	r22
 68c:	b3 95       	inc	r27
 68e:	d9 f7       	brne	.-10     	; 0x686 <__fixunssfsi+0x42>
 690:	3e f4       	brtc	.+14     	; 0x6a0 <__fixunssfsi+0x5c>
 692:	90 95       	com	r25
 694:	80 95       	com	r24
 696:	70 95       	com	r23
 698:	61 95       	neg	r22
 69a:	7f 4f       	sbci	r23, 0xFF	; 255
 69c:	8f 4f       	sbci	r24, 0xFF	; 255
 69e:	9f 4f       	sbci	r25, 0xFF	; 255
 6a0:	08 95       	ret

000006a2 <__fp_cmp>:
 6a2:	99 0f       	add	r25, r25
 6a4:	00 08       	sbc	r0, r0
 6a6:	55 0f       	add	r21, r21
 6a8:	aa 0b       	sbc	r26, r26
 6aa:	e0 e8       	ldi	r30, 0x80	; 128
 6ac:	fe ef       	ldi	r31, 0xFE	; 254
 6ae:	16 16       	cp	r1, r22
 6b0:	17 06       	cpc	r1, r23
 6b2:	e8 07       	cpc	r30, r24
 6b4:	f9 07       	cpc	r31, r25
 6b6:	c0 f0       	brcs	.+48     	; 0x6e8 <__fp_cmp+0x46>
 6b8:	12 16       	cp	r1, r18
 6ba:	13 06       	cpc	r1, r19
 6bc:	e4 07       	cpc	r30, r20
 6be:	f5 07       	cpc	r31, r21
 6c0:	98 f0       	brcs	.+38     	; 0x6e8 <__fp_cmp+0x46>
 6c2:	62 1b       	sub	r22, r18
 6c4:	73 0b       	sbc	r23, r19
 6c6:	84 0b       	sbc	r24, r20
 6c8:	95 0b       	sbc	r25, r21
 6ca:	39 f4       	brne	.+14     	; 0x6da <__fp_cmp+0x38>
 6cc:	0a 26       	eor	r0, r26
 6ce:	61 f0       	breq	.+24     	; 0x6e8 <__fp_cmp+0x46>
 6d0:	23 2b       	or	r18, r19
 6d2:	24 2b       	or	r18, r20
 6d4:	25 2b       	or	r18, r21
 6d6:	21 f4       	brne	.+8      	; 0x6e0 <__fp_cmp+0x3e>
 6d8:	08 95       	ret
 6da:	0a 26       	eor	r0, r26
 6dc:	09 f4       	brne	.+2      	; 0x6e0 <__fp_cmp+0x3e>
 6de:	a1 40       	sbci	r26, 0x01	; 1
 6e0:	a6 95       	lsr	r26
 6e2:	8f ef       	ldi	r24, 0xFF	; 255
 6e4:	81 1d       	adc	r24, r1
 6e6:	81 1d       	adc	r24, r1
 6e8:	08 95       	ret

000006ea <__fp_split3>:
 6ea:	57 fd       	sbrc	r21, 7
 6ec:	90 58       	subi	r25, 0x80	; 128
 6ee:	44 0f       	add	r20, r20
 6f0:	55 1f       	adc	r21, r21
 6f2:	59 f0       	breq	.+22     	; 0x70a <__fp_splitA+0x10>
 6f4:	5f 3f       	cpi	r21, 0xFF	; 255
 6f6:	71 f0       	breq	.+28     	; 0x714 <__fp_splitA+0x1a>
 6f8:	47 95       	ror	r20

000006fa <__fp_splitA>:
 6fa:	88 0f       	add	r24, r24
 6fc:	97 fb       	bst	r25, 7
 6fe:	99 1f       	adc	r25, r25
 700:	61 f0       	breq	.+24     	; 0x71a <__fp_splitA+0x20>
 702:	9f 3f       	cpi	r25, 0xFF	; 255
 704:	79 f0       	breq	.+30     	; 0x724 <__fp_splitA+0x2a>
 706:	87 95       	ror	r24
 708:	08 95       	ret
 70a:	12 16       	cp	r1, r18
 70c:	13 06       	cpc	r1, r19
 70e:	14 06       	cpc	r1, r20
 710:	55 1f       	adc	r21, r21
 712:	f2 cf       	rjmp	.-28     	; 0x6f8 <__fp_split3+0xe>
 714:	46 95       	lsr	r20
 716:	f1 df       	rcall	.-30     	; 0x6fa <__fp_splitA>
 718:	08 c0       	rjmp	.+16     	; 0x72a <__fp_splitA+0x30>
 71a:	16 16       	cp	r1, r22
 71c:	17 06       	cpc	r1, r23
 71e:	18 06       	cpc	r1, r24
 720:	99 1f       	adc	r25, r25
 722:	f1 cf       	rjmp	.-30     	; 0x706 <__fp_splitA+0xc>
 724:	86 95       	lsr	r24
 726:	71 05       	cpc	r23, r1
 728:	61 05       	cpc	r22, r1
 72a:	08 94       	sec
 72c:	08 95       	ret

0000072e <__fp_zero>:
 72e:	e8 94       	clt

00000730 <__fp_szero>:
 730:	bb 27       	eor	r27, r27
 732:	66 27       	eor	r22, r22
 734:	77 27       	eor	r23, r23
 736:	cb 01       	movw	r24, r22
 738:	97 f9       	bld	r25, 7
 73a:	08 95       	ret

0000073c <__gesf2>:
 73c:	0e 94 51 03 	call	0x6a2	; 0x6a2 <__fp_cmp>
 740:	08 f4       	brcc	.+2      	; 0x744 <__gesf2+0x8>
 742:	8f ef       	ldi	r24, 0xFF	; 255
 744:	08 95       	ret

00000746 <__mulsf3>:
 746:	0e 94 b6 03 	call	0x76c	; 0x76c <__mulsf3x>
 74a:	0c 94 27 04 	jmp	0x84e	; 0x84e <__fp_round>
 74e:	0e 94 19 04 	call	0x832	; 0x832 <__fp_pscA>
 752:	38 f0       	brcs	.+14     	; 0x762 <__mulsf3+0x1c>
 754:	0e 94 20 04 	call	0x840	; 0x840 <__fp_pscB>
 758:	20 f0       	brcs	.+8      	; 0x762 <__mulsf3+0x1c>
 75a:	95 23       	and	r25, r21
 75c:	11 f0       	breq	.+4      	; 0x762 <__mulsf3+0x1c>
 75e:	0c 94 10 04 	jmp	0x820	; 0x820 <__fp_inf>
 762:	0c 94 16 04 	jmp	0x82c	; 0x82c <__fp_nan>
 766:	11 24       	eor	r1, r1
 768:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_szero>

0000076c <__mulsf3x>:
 76c:	0e 94 75 03 	call	0x6ea	; 0x6ea <__fp_split3>
 770:	70 f3       	brcs	.-36     	; 0x74e <__mulsf3+0x8>

00000772 <__mulsf3_pse>:
 772:	95 9f       	mul	r25, r21
 774:	c1 f3       	breq	.-16     	; 0x766 <__mulsf3+0x20>
 776:	95 0f       	add	r25, r21
 778:	50 e0       	ldi	r21, 0x00	; 0
 77a:	55 1f       	adc	r21, r21
 77c:	62 9f       	mul	r22, r18
 77e:	f0 01       	movw	r30, r0
 780:	72 9f       	mul	r23, r18
 782:	bb 27       	eor	r27, r27
 784:	f0 0d       	add	r31, r0
 786:	b1 1d       	adc	r27, r1
 788:	63 9f       	mul	r22, r19
 78a:	aa 27       	eor	r26, r26
 78c:	f0 0d       	add	r31, r0
 78e:	b1 1d       	adc	r27, r1
 790:	aa 1f       	adc	r26, r26
 792:	64 9f       	mul	r22, r20
 794:	66 27       	eor	r22, r22
 796:	b0 0d       	add	r27, r0
 798:	a1 1d       	adc	r26, r1
 79a:	66 1f       	adc	r22, r22
 79c:	82 9f       	mul	r24, r18
 79e:	22 27       	eor	r18, r18
 7a0:	b0 0d       	add	r27, r0
 7a2:	a1 1d       	adc	r26, r1
 7a4:	62 1f       	adc	r22, r18
 7a6:	73 9f       	mul	r23, r19
 7a8:	b0 0d       	add	r27, r0
 7aa:	a1 1d       	adc	r26, r1
 7ac:	62 1f       	adc	r22, r18
 7ae:	83 9f       	mul	r24, r19
 7b0:	a0 0d       	add	r26, r0
 7b2:	61 1d       	adc	r22, r1
 7b4:	22 1f       	adc	r18, r18
 7b6:	74 9f       	mul	r23, r20
 7b8:	33 27       	eor	r19, r19
 7ba:	a0 0d       	add	r26, r0
 7bc:	61 1d       	adc	r22, r1
 7be:	23 1f       	adc	r18, r19
 7c0:	84 9f       	mul	r24, r20
 7c2:	60 0d       	add	r22, r0
 7c4:	21 1d       	adc	r18, r1
 7c6:	82 2f       	mov	r24, r18
 7c8:	76 2f       	mov	r23, r22
 7ca:	6a 2f       	mov	r22, r26
 7cc:	11 24       	eor	r1, r1
 7ce:	9f 57       	subi	r25, 0x7F	; 127
 7d0:	50 40       	sbci	r21, 0x00	; 0
 7d2:	9a f0       	brmi	.+38     	; 0x7fa <__mulsf3_pse+0x88>
 7d4:	f1 f0       	breq	.+60     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7d6:	88 23       	and	r24, r24
 7d8:	4a f0       	brmi	.+18     	; 0x7ec <__mulsf3_pse+0x7a>
 7da:	ee 0f       	add	r30, r30
 7dc:	ff 1f       	adc	r31, r31
 7de:	bb 1f       	adc	r27, r27
 7e0:	66 1f       	adc	r22, r22
 7e2:	77 1f       	adc	r23, r23
 7e4:	88 1f       	adc	r24, r24
 7e6:	91 50       	subi	r25, 0x01	; 1
 7e8:	50 40       	sbci	r21, 0x00	; 0
 7ea:	a9 f7       	brne	.-22     	; 0x7d6 <__mulsf3_pse+0x64>
 7ec:	9e 3f       	cpi	r25, 0xFE	; 254
 7ee:	51 05       	cpc	r21, r1
 7f0:	80 f0       	brcs	.+32     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7f2:	0c 94 10 04 	jmp	0x820	; 0x820 <__fp_inf>
 7f6:	0c 94 98 03 	jmp	0x730	; 0x730 <__fp_szero>
 7fa:	5f 3f       	cpi	r21, 0xFF	; 255
 7fc:	e4 f3       	brlt	.-8      	; 0x7f6 <__mulsf3_pse+0x84>
 7fe:	98 3e       	cpi	r25, 0xE8	; 232
 800:	d4 f3       	brlt	.-12     	; 0x7f6 <__mulsf3_pse+0x84>
 802:	86 95       	lsr	r24
 804:	77 95       	ror	r23
 806:	67 95       	ror	r22
 808:	b7 95       	ror	r27
 80a:	f7 95       	ror	r31
 80c:	e7 95       	ror	r30
 80e:	9f 5f       	subi	r25, 0xFF	; 255
 810:	c1 f7       	brne	.-16     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 812:	fe 2b       	or	r31, r30
 814:	88 0f       	add	r24, r24
 816:	91 1d       	adc	r25, r1
 818:	96 95       	lsr	r25
 81a:	87 95       	ror	r24
 81c:	97 f9       	bld	r25, 7
 81e:	08 95       	ret

00000820 <__fp_inf>:
 820:	97 f9       	bld	r25, 7
 822:	9f 67       	ori	r25, 0x7F	; 127
 824:	80 e8       	ldi	r24, 0x80	; 128
 826:	70 e0       	ldi	r23, 0x00	; 0
 828:	60 e0       	ldi	r22, 0x00	; 0
 82a:	08 95       	ret

0000082c <__fp_nan>:
 82c:	9f ef       	ldi	r25, 0xFF	; 255
 82e:	80 ec       	ldi	r24, 0xC0	; 192
 830:	08 95       	ret

00000832 <__fp_pscA>:
 832:	00 24       	eor	r0, r0
 834:	0a 94       	dec	r0
 836:	16 16       	cp	r1, r22
 838:	17 06       	cpc	r1, r23
 83a:	18 06       	cpc	r1, r24
 83c:	09 06       	cpc	r0, r25
 83e:	08 95       	ret

00000840 <__fp_pscB>:
 840:	00 24       	eor	r0, r0
 842:	0a 94       	dec	r0
 844:	12 16       	cp	r1, r18
 846:	13 06       	cpc	r1, r19
 848:	14 06       	cpc	r1, r20
 84a:	05 06       	cpc	r0, r21
 84c:	08 95       	ret

0000084e <__fp_round>:
 84e:	09 2e       	mov	r0, r25
 850:	03 94       	inc	r0
 852:	00 0c       	add	r0, r0
 854:	11 f4       	brne	.+4      	; 0x85a <__fp_round+0xc>
 856:	88 23       	and	r24, r24
 858:	52 f0       	brmi	.+20     	; 0x86e <__fp_round+0x20>
 85a:	bb 0f       	add	r27, r27
 85c:	40 f4       	brcc	.+16     	; 0x86e <__fp_round+0x20>
 85e:	bf 2b       	or	r27, r31
 860:	11 f4       	brne	.+4      	; 0x866 <__fp_round+0x18>
 862:	60 ff       	sbrs	r22, 0
 864:	04 c0       	rjmp	.+8      	; 0x86e <__fp_round+0x20>
 866:	6f 5f       	subi	r22, 0xFF	; 255
 868:	7f 4f       	sbci	r23, 0xFF	; 255
 86a:	8f 4f       	sbci	r24, 0xFF	; 255
 86c:	9f 4f       	sbci	r25, 0xFF	; 255
 86e:	08 95       	ret

00000870 <_exit>:
 870:	f8 94       	cli

00000872 <__stop_program>:
 872:	ff cf       	rjmp	.-2      	; 0x872 <__stop_program>
